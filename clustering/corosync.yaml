# This playbook installs and configure corosync and pacemaker on a set of nodes part of a given group.
---

# See the file /etc/ansible/hosts where the group is actually defined. There might be a way to define groups in a file 'closer' to this playbook.
- hosts: clusternodes
  vars:
    mcastport : 5405
    bindnetaddr : 192.168.56.0
  tasks:
  
  # It would be better to use Ansible to change the IP tables config to allow corosync/pacemaker on the nodes part of the cluster.
  - name: ensure iptables is stopped and is not running at boot time.
    action: service name=iptables state=stopped enabled=no

  - name: ensure python-selinux is installed on all nodes.
    action: yum name=libselinux-python state=installed  

  - name: set SELinux to permissive
    action: selinux policy=targeted state=permissive

  #- name: ensure SELinux is turned off
  #  action: command /usr/sbin/setenforce 0

  - name: enable the ha clustering repo
    action: copy src=ha-clustering.repo dest=/etc/yum.repos.d/ha-clustering.repo

  - name: ensure corosync is installed.
    action: yum name=corosync state=installed

  - name: write the corosync config files
    action: template src=corosync.conf dest=/etc/corosync/corosync.conf

  - name: add the pcmk file in the folder service.d for corosync configuration
    action: copy src=pcmk dest=/etc/corosync/service.d/pcmk

  - name: ensure Pacemaker is installed.
    action: yum name=pacemaker state=installed

  - name: ensure crmsh is installed.
    action: yum name=crmsh state=installed

  - name: ensure corosync is running (and automatically at boot time)
    action: service name=corosync state=started enabled=yes

  - name: ensure pacemaker is running automatically at boot time
    action: command /sbin/chkconfig pacemaker on

  - name: ensure Pacemaker is running (and also enabled to start at boot time). For some reason, Pacemaker will fail to start when the steps below are done synchronously.
    action: service name=pacemaker state=started enabled=yes
    async: 60
    poll:  5

  - name: copy the example pacemaker fragments used to configure clusters.
    action: copy src=fragments dest=~quantel
    tags:
     - fragments
